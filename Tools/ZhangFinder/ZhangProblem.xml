<?xml version="1.0" ?> 

<class base="NVL_AI::ProblemBase"> 

<namespace>NVL_App</namespace> 
<solution>ZhangFinderLib</solution> 
<name>ZhangProblem</name> 
<description>Determine the correctness of camera matrix with respect to grid homographies</description> 

<includes>    
    <include name="iostream" namespace="std" local="false" /> 
    <include name="opencv2/opencv.hpp" namespace="cv" local="false" />
    <include name="Solver/ProblemBase.h" local="true" />
</includes> 

<variables> 
    <variable type="Vec3d" name="h11" code="10" />
    <variable type="Vec3d" name="h12" code="10" />
    <variable type="Vec3d" name="h21" code="10" />
    <variable type="Vec3d" name="h22" code="10" />
</variables> 

<constructors> 

<!-- Main Constructor -->
<constructor type="custom" inline="false"> 
    <parameter type="Mat&" name="H1" description="The homography of the first point" />
    <parameter type="Mat&" name="H2" description="The homography of the second point" /> 
</constructor> 

</constructors>    

<methods>    

<!-- Get the data size -->
<method section="Data Size" modifiers="virtual" access="public" return="int" name="GetDataSize" description="Returns the number of data points that we are evaluating" inline="false" /> 

<!--Evaluate the associated data value -->
<method section="Evaluate" modifiers="virtual" access="public" return="double" name="Evaluate" description="Evaluate the provided camera parameters" inline="false"> 
    <parameter type="Mat&" name="parameters" description="The number of parameters that we are evaluating" />
    <parameter type="Mat&" name="errors" description="The error score for each element" /> 
</method> 

<!-- Helper to determine the B value -->
<method section="Helper" access="public" return="Mat" name="GetB" description="Converts the parameters into a B matrix" inline="false"> 
    <parameter type="Mat&" name="parameters" description="The parameters that we are evaluating" /> 
</method> 

</methods> 

<tests> 
    <test name="verify_correct_match" description="Makes sure that a correct match returns essentially zero match score" exception="false" />
    <test name="verify_incorrect_match" description="Makes sure that an incorrect match returns a non-zero match score" exception="false" />
</tests> 

</class> 